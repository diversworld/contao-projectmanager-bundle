<h1>Projekt Gantt Diagramm</h1>

<style>
    #gantt { width: 100%; min-height: 1024px; margin: 1rem 0; }

    .gantt .bar { rx: 3px; }
    .gantt .bar.critical { fill: #e74c3c; stroke: #c0392b; }
    .gantt .bar.milestone { fill: #3498db; stroke: #2980b9; }

    .gantt-popup { 
        padding: 0.5rem; font-size: 0.9rem; background: #fff; 
        border: 1px solid #ccc; border-radius: 6px;
        box-shadow: 0 2px 6px rgba(0,0,0,0.15);
    }
	.switch {
		position: relative;
		display: inline-block;
		width: 50px;
		height: 20px;
		float: right;
	}

	.switch input {
		opacity: 0;
		width: 0;
		height: 0;
	}

	.slider {
		position: absolute;
		cursor: pointer;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background-color: #ddd;
		-webkit-transition: 0.2s;
		transition: 0.2s;
		border: 1px solid #37352f;
		scale: 0.75;
	}

	.slider:before {
		position: absolute;
		content: '';
		height: 12px;
		width: 12px;
		left: 4px;
		bottom: 3px;
		background-color: white;
		-webkit-transition: 0.2s;
		transition: 0.2s;
	}

	input:checked + .slider {
		background-color: #7c7c7c;
		border-color: #7c7c7c;
	}

	input:focus + .slider {
		box-shadow: none;
	}

	input:checked + .slider:before {
		-webkit-transform: translateX(28px);
		-ms-transform: translateX(28px);
		transform: translateX(28px);
	}

	.slider.round {
		border-radius: 25px;
	}

	.slider.round:before {
		border-radius: 50%;
	}

	.viewmode-select {
		font-size: 100%;
	}

	.selected {
		border: 1.5px solid black !important;
	}

	.button {
		background: white;
		border: 1px dotted black;
		border-radius: 3px;
	}

	.button:hover {
		background: #f4f5f6;
		border: 1px dotted black;
	}

	.button div {
		color: black;
	}

	.input-switch {
		align-items: center;
		width: 45%;
		display: flex;
		justify-content: space-between;
	}

	.input-switch label {
		padding-right: 30px;
		font-size: 14px;
	}

	.code {
		display: block;
		background: 0;
		white-space: pre;
		overflow-x: scroll;
		max-width: 100%;
		min-width: 100px;
		padding: 0;
		font-family: monospace;
		padding-top: 0.8571429em;
		padding-right: 1.1428571em;
		padding-bottom: 0.8571429em;
		padding-left: 1.1428571em;
		background: #1f2937;
		color: #e5e7eb;
		border-radius: 3px;
	}
</style>

<script src="https://cdn.jsdelivr.net/npm/frappe-gantt/dist/frappe-gantt.umd.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/frappe-gantt/dist/frappe-gantt.css">

<div id="gantt"></div>
<div id="sideheader"></div>
<div id="popup"></div>

<script>
document.addEventListener("DOMContentLoaded", function() {
    const tasks = <?php echo $this->ganttTasks; ?>;
    const container = document.querySelector("#gantt");

    if (!tasks.length) {
        container.innerHTML = "<p><em>Keine Tasks vorhanden.</em></p>";
        return;
    }

    const gantt = new Gantt(container, tasks, {
        view_mode: "Day",
        date_format: "DD.MM.YYYY",
        language: "de",
        view_mode_select: true,
        infinite_padding: true,
        container_height: 600,
        bar_height: 24,
        column_width: 24,
        today_button: true,      // âœ… Button anzeigen
        scroll_to: "today",      // âœ… beim Laden zu Heute springen
        custom_popup_html: task => `
            <div class="gantt-popup">
                <strong>${task.name}</strong><br>
                Start: ${task.start}<br>
                Ende: ${task.end}<br>
                Fortschritt: ${task.progress}%
            </div>
        `
    });

    // ðŸ”§ Fallback: Falls der eingebaute Button nichts macht, hier abfangen
    document.addEventListener("click", e => {
        if (e.target.closest(".gantt-today-btn")) {
            gantt.scroll_current();
        }
    });

    // Milestones als Raute rendern
    gantt.after_render = function() {
        gantt.tasks.forEach(t => {
            if (t.custom_class === 'milestone') {
                const wrapper = document.querySelector(`.bar-wrapper[data-id="${t.id}"]`);
                if (wrapper) {
                    const bar = wrapper.querySelector('rect.bar');
                    if (bar) {
                        const width = parseFloat(bar.getAttribute('width'));
                        const height = parseFloat(bar.getAttribute('height'));
                        const x = parseFloat(bar.getAttribute('x')) + width/2;
                        const y = parseFloat(bar.getAttribute('y')) + height/2;

                        bar.setAttribute('width', 12);
                        bar.setAttribute('height', 12);
                        bar.setAttribute('rx', 0);

                        wrapper.setAttribute('transform', `rotate(45 ${x} ${y})`);
                    }
                }
            }
        });
    };
});
</script>